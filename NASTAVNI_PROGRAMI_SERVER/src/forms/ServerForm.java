/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package forms;

import com.formdev.flatlaf.FlatIntelliJLaf;
import com.formdev.flatlaf.themes.FlatMacDarkLaf;
import controller.ServerController;
import java.io.IOException;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import threads.ThreadServer;

/**
 *
 * @author ivana
 */
public class ServerForm extends javax.swing.JFrame {

    private ThreadServer threadServer;

    /**
     * Creates new form ServerForm
     */
    public ServerForm() {
        initComponents();
        setLocationRelativeTo(null);
        setTitle("Serverska Forma");
        ServerOpis.setText("Server je ugasen");
        PokreniServer.setEnabled(true);
        ZaustaviServer.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PokreniServer = new javax.swing.JButton();
        ZaustaviServer = new javax.swing.JButton();
        ServerOpis = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(25, 42, 72));
        setForeground(new java.awt.Color(25, 42, 72));

        PokreniServer.setText("Pokreni server");
        PokreniServer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PokreniServerActionPerformed(evt);
            }
        });

        ZaustaviServer.setText("Zaustavi Server");
        ZaustaviServer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ZaustaviServerActionPerformed(evt);
            }
        });

        ServerOpis.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        ServerOpis.setForeground(new java.awt.Color(0, 51, 153));

        jMenuBar1.setBorder(null);
        jMenuBar1.setForeground(new java.awt.Color(0, 51, 102));
        jMenuBar1.setDoubleBuffered(true);
        jMenuBar1.setFont(new java.awt.Font("Montserrat Medium", 0, 12)); // NOI18N

        jMenu1.setBackground(new java.awt.Color(255, 143, 129));
        jMenu1.setBorder(null);
        jMenu1.setForeground(new java.awt.Color(0, 51, 153));
        jMenu1.setText("Konfiguracija baze");

        jMenuItem1.setText("Izmeni konfiguraciju");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addComponent(PokreniServer)
                .addGap(62, 62, 62)
                .addComponent(ZaustaviServer)
                .addContainerGap(78, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ServerOpis, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(120, 120, 120))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(28, Short.MAX_VALUE)
                .addComponent(ServerOpis, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PokreniServer)
                    .addComponent(ZaustaviServer))
                .addGap(37, 37, 37))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void PokreniServerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PokreniServerActionPerformed

        if (threadServer == null || !threadServer.isAlive()) {

            threadServer = new ThreadServer();
            threadServer.start();

            ServerOpis.setText("Server je pokrenut");
            ZaustaviServer.setEnabled(true);
            PokreniServer.setEnabled(false);

        }


    }//GEN-LAST:event_PokreniServerActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed

        new KonfiguracijaBaze(this, true).setVisible(true);

    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void ZaustaviServerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ZaustaviServerActionPerformed

        if (threadServer.getServersocket() != null && threadServer.getServersocket().isBound()) {
            try {
                threadServer.getServersocket().close();
                JOptionPane.showMessageDialog(this, "Server je ugasen, gasenje programa...");
                this.dispose();
                System.exit(0);
            } catch (IOException ex) {
                Logger.getLogger(ServerForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        }


    }//GEN-LAST:event_ZaustaviServerActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        try {
            UIManager.setLookAndFeel(new FlatIntelliJLaf());
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(ServerForm.class.getName()).log(Level.SEVERE, null, ex);
        }
       
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ServerForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton PokreniServer;
    private javax.swing.JLabel ServerOpis;
    private javax.swing.JButton ZaustaviServer;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    // End of variables declaration//GEN-END:variables
}
